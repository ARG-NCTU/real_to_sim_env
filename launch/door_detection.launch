<?xml version="1.0" ?>
<launch>
  <arg name="veh" default="X1"/>
  <arg name="add_group_srv" value="/model_dynamics_manager/add_control_group"/>

  <group ns="$(arg veh)">
    <node pkg="nctu_simulation_env" type="door_segment_service" name="door_segment_service" output="screen">
      <rosparam command="load" file="$(find nctu_simulation_env)/config/all_doors.yaml" />
    </node>


    <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

        <remap from="cloud_in" to="/X1/points" />
        <remap from="scan" to="/RL/scan" />
        <rosparam>
            target_frame: front_laser
            min_height: -0.3
            max_height: 0.5
            transform_tolerance: 0.01
            angle_min: -2.094395
            angle_max: 2.094395
            angle_increment: 0.017453
            scan_time: 0.1
            range_min: 0.4
            range_max: 100.0
            use_inf: False

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 0
        </rosparam>

    </node>
  </group>

  <!-- Model Dynamic Manager -->

  <node pkg="dynamic_gazebo_models" type="dynamics_manager" name="dynamics_manager" output="screen"/>



  <node pkg="rosservice" type="rosservice" name="flip_door_group" args="call
    $(arg add_group_srv)
    '{
        group:
          {
            group_name: 'FlipDoors',
            type: 'door',
            active_units: [1, 2]
          }
    }'
  "/>
  <node pkg="rosservice" type="rosservice" name="door_1" args="call
    $(arg add_group_srv)
    '{
        group:
          {
            group_name: 'door_1',
            type: 'door',
            active_units: [1]
          }
    }'
  "/>
  <node pkg="rosservice" type="rosservice" name="door_2" args="call
    $(arg add_group_srv)
    '{
        group:
          {
            group_name: 'door_2',
            type: 'door',
            active_units: [2]
          }
    }'
  "/>

</launch>
